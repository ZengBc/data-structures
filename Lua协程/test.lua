--我们并不经常需要用到协程，但是当需要的时候
--协程会起到一种不可比拟的作用
--协程可以颠倒调用者和被调用者的关系，而且这种灵活性解决了软件架构中
--被笔者称为"谁是老大whoistheboss"或者谁拥有主循环who has the main loop的问题
--这正是诸如事件驱动编程 通过构造器构建迭代器和协作式多线程等几个看上去并不相关的问题的泛化
--而协程以简单和搞笑的方式解决了这些问题

